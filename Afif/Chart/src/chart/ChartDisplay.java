/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package chart;

import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JPanel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartFrame;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.general.DefaultPieDataset;

/**
 *
 * @author ACER Z3-451
 */
public class ChartDisplay extends javax.swing.JFrame {

    private int idx = 0;

    /**
     * Creates new form ChartFrame
     */
    public ChartDisplay() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnTampil = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        Menu = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnTampil.setText("Tampil");
        btnTampil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTampilActionPerformed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(153, 153, 153));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 458, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 264, Short.MAX_VALUE)
        );

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Tes Chart");

        Menu.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Product ID", "Category", "Sub-Category", "Product Name", "Transaksi Penjualan" }));
        Menu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("Menu");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(24, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(31, 31, 31)
                        .addComponent(Menu, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnTampil)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 23, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(207, 207, 207)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(Menu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnTampil)
                .addGap(18, 18, 18))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnTampilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTampilActionPerformed
        // TODO add your handling code here:
//        DefaultPieDataset objDataset = new DefaultPieDataset ();
//        DefaultCategoryDataset objDataset = new DefaultCategoryDataset();
//        this.jPanel1 = displayPieChart ();
        displayPieChart();
//        displayLineChart(objDataset);
    }//GEN-LAST:event_btnTampilActionPerformed

    private void MenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuActionPerformed
        // TODO add your handling code here:
        idx = Menu.getSelectedIndex();
    }//GEN-LAST:event_MenuActionPerformed

    void displayPieChart() {
        if (idx == 4) {
            DefaultCategoryDataset objDataset = new DefaultCategoryDataset();
            displayLineChart(objDataset);
        } else {
            int n, sum, rows = 1;
            String label = null, dataExcel = null;
            boolean beres = true;

            ReadExcel excel = new ReadExcel();
//        ReadExcelPOI excel = new ReadExcelPOI();
//        excel.readPieData();
            DefaultPieDataset objDataset = new DefaultPieDataset();

            try {
                System.out.println("Tes Total Row :  " + excel.getTotalRows());
                excel.setIndex(idx);
                while (rows < excel.getTotalRows()) {
//                System.out.println ("Tes 4 ");
                    excel.startRead(rows);
                    sum = excel.getSum();
                    rows = excel.getRowsNow();
                    label = excel.getDataJava();
//                if (excel.getFinish()){
                    excel.setFinish(false);
                    excel.setSum(0);
                    objDataset.setValue("" + label + " " + String.valueOf(sum), new Integer(sum));
//                }
                }
                System.out.println(label);
            } catch (Exception ex) {
                Logger.getLogger(ChartDisplay.class.getName()).log(Level.SEVERE, null, ex);
            }

            switch (idx) {
                case 0:
                    dataExcel = "Product ID";
                    break;
                case 1:
                    dataExcel = "Category";
                    break;
                case 2:
                    dataExcel = "Sub-Category";
                    break;
                case 3:
                    dataExcel = "Product Name";
                    break;
            }
            JFreeChart chart = ChartFactory.createPieChart("Pie Chart for " + dataExcel, objDataset);
            ChartFrame frame = new ChartFrame("Contoh Chart", chart);
            frame.setSize(500, 500);
            frame.setVisible(true);
        }
//        return new ChartPanel(chart);
//        ChartPanel chartPanel = new ChartPanel(chart);
//        chartPanel.setPreferredSize(new java.awt.Dimension(560, 367));
//        setContentPane(chartPanel);
//        chartPanel.setVisible(true);
    }

    void displayBarChart() {
//        JFreeChart barChart = 
    }

    void displayLineChart(DefaultCategoryDataset objDataset) {
//        JFreeChart chart = ChartFactory.createPieChart("Pie Chart for "+dataExcel, objDataset);
//        ChartFrame frame = new ChartFrame ("Contoh Chart", chart);
//        frame.setSize(900, 900);
//        frame.setVisible(true);
        ReadExcelPOI excel = new ReadExcelPOI();
        objDataset = excel.readTesLine();
        System.out.println("Masuk ");
        JFreeChart chart = ChartFactory.createLineChart("Line Chart For", "Value", "Number", objDataset);
        ChartFrame frame = new ChartFrame("Contoh Chart", chart);
        frame.setSize(500, 500);
        frame.setVisible(true);
    }

    DefaultCategoryDataset createLineDataset() {
        DefaultCategoryDataset objDataset = new DefaultCategoryDataset();
        ReadExcelPOI excel = new ReadExcelPOI();

        excel.startReadExcel();
//        excel.readLineData();
        int size = excel.getList().size();

        System.out.println("Size : " + size);
        for (int i = 0; i < size; i++) {
            System.out.println("Masuk 2");
            objDataset.addValue(excel.getList().get(i).getValue(), excel.getList().get(i).getLineItem(),
                    excel.getList().get(i).getCategory());
            System.out.println("Indeks i : " + i + " || Category : " + excel.getList().get(i).getCategory() + " || Value : "
                    + excel.getList().get(i).getValue() + "\n");
        }
//        objDataset.addValue(1, "schools", "1970");
//        objDataset.addValue(3, "schools", "1980");
//        objDataset.addValue(6, "schools", "1990");
//        objDataset.addValue(2, "schools", "2000");
//        objDataset.addValue(4, "schools", "2010");
//        objDataset.addValue(2, "schools", "2014");
//
//        objDataset.addValue(2, "Apa", "1970");
//        objDataset.addValue(0, "Apa", "1980");
//        objDataset.addValue(0, "Apa", "1990");
//        objDataset.addValue(0, "Apa", "2000");
//        objDataset.addValue(0, "Apa", "2010");
//        objDataset.addValue(0, "Apa", "2014");

        System.out.println("Masuk 3");
        return objDataset;
    }

    DefaultPieDataset createPieDataset() {
        DefaultPieDataset objDataset = new DefaultPieDataset();
        ReadExcelPOI excel = new ReadExcelPOI();

        excel.readLineData();
        int size = excel.getList().size();

        System.out.println("Size 2 : " + size);
        for (int i = 0; i < size; i++) {
            objDataset.setValue(excel.getList().get(i).getCategory(), excel.getList().get(i).getValue());
            System.out.println(" Kategori : " + excel.getList().get(i).getCategory());
            System.out.println(" Nilai : " + excel.getList().get(i).getValue());
        }
        System.out.println("Tes");
        return objDataset;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ChartFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ChartFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ChartFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ChartFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
//                JFreeChart chart = null;
                new ChartDisplay().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> Menu;
    private javax.swing.JButton btnTampil;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
